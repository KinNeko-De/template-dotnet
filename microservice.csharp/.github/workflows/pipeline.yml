on:
  push:
    paths-ignore:
      - '**/**.md'
      - 'docs/**'
env:
  SEMANTIC_VERSION: 0.1.${{github.run_number}}

concurrency: ci-${{ github.ref }}

name: project.1-domain.1-svc

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.x

    - name: Remove Github nuget source that was added with nuget.config
      run: dotnet nuget remove source github
    - name: Add Github nuget source
      run: dotnet nuget add source https://nuget.pkg.github.com/KinNeko-De/index.json --name github --username KinNeko-De --password ${{secrets.GITHUB_TOKEN}} --store-password-in-clear-text
    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore -c Release -p:Version=${{ env.SEMANTIC_VERSION }}

    - name: UnitTest
      run: dotnet test Tests/*.UnitTest --no-build --no-restore -c Release -p:Version=${{ env.SEMANTIC_VERSION }} --verbosity normal --collect:"XPlat Code Coverage" --settings Tests/coverlet.runsettings --results-directory=Tests/coverage
      timeout-minutes: 10

    - name: Create docker network
      run: 'docker network create project.1-dev-net'
    - name: Start database
      run: docker compose -f database/docker-compose.yml up --wait --quiet-pull
    - name: Start database logs
      run: docker compose -f database/docker-compose.yml logs
    - name: ComponentTest
      run: dotnet test Tests/*.ComponentTest --no-build --no-restore -c Release -p:Version=${{ env.SEMANTIC_VERSION }} --verbosity normal --collect:"XPlat Code Coverage" --settings Tests/coverlet.runsettings --results-directory=Tests/coverage
      timeout-minutes: 20

    - name: Publish
      run: dotnet publish Project.1.Template.1/Project.1.Template.1.csproj -o sut/publish -c Release --no-restore --no-build --no-self-contained

    - name: Start system under test
      run: docker compose -f sut/docker-compose.yml up --wait --quiet-pull
    - name: Start system under test logs
      run: docker compose -f sut/docker-compose.yml logs
    - name: IntegrationTest
      run: dotnet test Tests/*.IntegrationTest --no-build --no-restore -c Release -p:Version=${{ env.SEMANTIC_VERSION }} --verbosity normal --collect:"XPlat Code Coverage" --settings Tests/coverlet.runsettings --results-directory=Tests/coverage
      timeout-minutes: 10

    - name: Stop database
      if: always()
      run: docker compose -f database/docker-compose.yml down
    - name: Stop system under test
      if: always()
      run: docker compose -f sut/docker-compose.yml down

    - name: Publish code coverage
      uses: codecov/codecov-action@v3
      with:
        root_dir: .
        fail_ci_if_error: true
        verbose: true
